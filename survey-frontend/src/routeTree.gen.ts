/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SurveysLayoutRouteImport } from './routes/surveys/_layout'
import { Route as SurveysSurveyIdRouteImport } from './routes/surveys/$surveyId'

const SurveysRouteImport = createFileRoute('/surveys')()

const SurveysRoute = SurveysRouteImport.update({
  id: '/surveys',
  path: '/surveys',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SurveysLayoutRoute = SurveysLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => SurveysRoute,
} as any)
const SurveysSurveyIdRoute = SurveysSurveyIdRouteImport.update({
  id: '/surveys/$surveyId',
  path: '/surveys/$surveyId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/surveys/$surveyId': typeof SurveysSurveyIdRoute
  '/surveys': typeof SurveysLayoutRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/surveys/$surveyId': typeof SurveysSurveyIdRoute
  '/surveys': typeof SurveysLayoutRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/surveys/$surveyId': typeof SurveysSurveyIdRoute
  '/surveys': typeof SurveysRouteWithChildren
  '/surveys/_layout': typeof SurveysLayoutRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/login' | '/surveys/$surveyId' | '/surveys'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/login' | '/surveys/$surveyId' | '/surveys'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/surveys/$surveyId'
    | '/surveys'
    | '/surveys/_layout'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginRoute: typeof LoginRoute
  SurveysSurveyIdRoute: typeof SurveysSurveyIdRoute
  SurveysRoute: typeof SurveysRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/surveys': {
      id: '/surveys'
      path: '/surveys'
      fullPath: '/surveys'
      preLoaderRoute: typeof SurveysRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/surveys/_layout': {
      id: '/surveys/_layout'
      path: '/surveys'
      fullPath: '/surveys'
      preLoaderRoute: typeof SurveysLayoutRouteImport
      parentRoute: typeof SurveysRoute
    }
    '/surveys/$surveyId': {
      id: '/surveys/$surveyId'
      path: '/surveys/$surveyId'
      fullPath: '/surveys/$surveyId'
      preLoaderRoute: typeof SurveysSurveyIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface SurveysRouteChildren {
  SurveysLayoutRoute: typeof SurveysLayoutRoute
}

const SurveysRouteChildren: SurveysRouteChildren = {
  SurveysLayoutRoute: SurveysLayoutRoute,
}

const SurveysRouteWithChildren =
  SurveysRoute._addFileChildren(SurveysRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginRoute: LoginRoute,
  SurveysSurveyIdRoute: SurveysSurveyIdRoute,
  SurveysRoute: SurveysRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
